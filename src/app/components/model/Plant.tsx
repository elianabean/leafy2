/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 ./public/models/plant.glb --transform -t 
Files: ./public/models/plant.glb [114.16KB] > C:\Users\ewang\vscode files\leafy2\plant-transformed.glb [13.85KB] (88%)
Author: AkuVai (https://sketchfab.com/AkuVai)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-potted-plant-8ea094573a874437bc9f31436d492aa6
Title: Low poly Potted plant
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Center } from '@react-three/drei';
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_Material001_0: THREE.Mesh
    Cylinder_Material002_0: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/plant-transformed.glb') as GLTFResult

  const group = useRef<THREE.Group>(null)

  useFrame(({camera}) => {
    group.current?.rotateY(THREE.MathUtils.degToRad(0.2));
  });


  return (
    <group {...props} dispose={null} position={[0, 0, 0]} ref={group}>
      <Center>
      <mesh geometry={nodes.Cylinder_Material001_0.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={[1, 1, 0.679]} />
      <mesh geometry={nodes.Cylinder_Material002_0.geometry} material={materials['Material.002']} rotation={[-Math.PI / 2, 0, 0]} scale={[1, 1, 0.679]} />
      </Center>
    </group>
  )
}

useGLTF.preload('/models/plant-transformed.glb')
